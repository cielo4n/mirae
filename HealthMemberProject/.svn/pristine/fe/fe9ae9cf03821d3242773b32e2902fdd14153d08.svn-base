
package health.ui;

import javax.swing.JOptionPane;

public class WarningMessage {

//	public static void MainScreenLoginWarning()  // 메인 화면에서 로그인시 없는 사용자일때 
//	{
//		JOptionPane.showMessageDialog(null, "등록된 사용자의 정보가 아닙니다.", "미 등록 정보", JOptionPane.ERROR_MESSAGE);
//	}

	public static void notSamePassward()  // 패스워드가 불일치할떄
	{
		JOptionPane.showMessageDialog(null, "패스워드가 동일한지 확인해주세요", "패스워드 불일치", JOptionPane.WARNING_MESSAGE);
	}

	public static void mainScreenJoinSuccess() // 메인 화면에서 관리자 등록시 성공적으로 등록 완료되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 등록되었습니다.", "관리자 등록 완료", JOptionPane.PLAIN_MESSAGE);
	}
	
	public static void mainScreenJoinFailure() // 메인 화면에서 관리자 등록시 등록실패했을 때
	{
		JOptionPane.showMessageDialog(null, "등록을 실패했습니다.", "관리자 등록 실패", JOptionPane.ERROR_MESSAGE);
	}
	
	public static void mainScreenLoginWarning()  // 메인 화면에서 로그인시 아이디가 없거나, 비밀번호가 안맞거나 할 경우 
	{
		JOptionPane.showMessageDialog(null, "아이디와 패스워드를 확인해주세요", "로그인 실패", JOptionPane.ERROR_MESSAGE);
	}
	
	public static void mainScreenLoginBlankWarning()  // 메인 화면에서 로그인시 아이디와 비밀번호 입력 안함
	{
		JOptionPane.showMessageDialog(null, "아이디와 패스워드를 입력해주세요", "미 입력 내용", JOptionPane.WARNING_MESSAGE);
	}

	public static void blankWarning() // 회원등록,트레이너등록 ( 새롭게 등록할때 빈칸을 처리하지 않고 누른경우)
	{
		JOptionPane.showMessageDialog(null, "빈칸을 빠짐없이 입력해주세요.", "미 입력 내용", JOptionPane.WARNING_MESSAGE);
	}

	public static void mainScreenLoginCheck() // 관리자인지 헬스장인지 체크가 안되어있는 경우
	{
		JOptionPane.showMessageDialog(null, "관리자 또는 헬스장을 체크해주세요.", "미 체크 항목", JOptionPane.WARNING_MESSAGE);
	}

	public static void duplicationWarning() // 관리자, 헬스장 등록시 아이디 중복될 때
	{
		JOptionPane.showMessageDialog(null, "중복된 아이디 입니다", "등록 실패", JOptionPane.ERROR_MESSAGE);
	}

	public static void healthJoin() // 헬스장 등록시 성공적으로 등록완료되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 등록되었습니다.", "헬스장 등록완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static boolean healthDelete()  // 헬스장 삭제할때 
	{
		int abc;

		abc = JOptionPane.showConfirmDialog(null, "정말 삭제하시겠습니까?", "헬스장 삭제", JOptionPane.YES_NO_OPTION);
		if (abc == JOptionPane.YES_OPTION) {
			return true;
		} else if (abc == JOptionPane.NO_OPTION) {
			return false;
		} 
		return false;
	}

	public static void healthDeleteOK(){
		JOptionPane.showMessageDialog(null, "삭제 완료되었습니다.", "헬스장 삭제 완료", JOptionPane.PLAIN_MESSAGE);
	}
	public static void healthDeleteCancel(){
		JOptionPane.showMessageDialog(null, "헬스장 삭제가 취소되었습니다.", "헬스장 삭제 취소", JOptionPane.INFORMATION_MESSAGE);
	}

	public static void healthUpdateSuccess()  // 헬스장 수정할때 수정이 성공적으로 되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 수정되었습니다.", "헬스장 수정완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static void trainerJoin()  // 트레이너 등록시 성공적으로 등록완료되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 등록되었습니다.", "트레이너 등록완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static void inputYearFailure(){
		JOptionPane.showMessageDialog(null, "생년월일은 숫자로 입력해야 합니다.", "잘못된 입력", JOptionPane.ERROR_MESSAGE);	
	}
	
	public static void inputHeightFailure(){
		JOptionPane.showMessageDialog(null, "키는 숫자로 입력해야 합니다.", "잘못된 입력", JOptionPane.ERROR_MESSAGE);	

	}
	public static void inputWeightFailure(){
		JOptionPane.showMessageDialog(null, "몸무게는 숫자로 입력해야 합니다.", "잘못된 입력", JOptionPane.ERROR_MESSAGE);	

	}
	public static void inputRegYearFailure(){
		JOptionPane.showMessageDialog(null, "등록일은 숫자로 입력해야 합니다.", "잘못된 입력", JOptionPane.ERROR_MESSAGE);	
	}
	
	public static void inputCareerFailure(){
		JOptionPane.showMessageDialog(null, "경력은 숫자로 입력해야 합니다.", "잘못된 입력", JOptionPane.ERROR_MESSAGE);	
	}
	
	public static void memberUpdate()  // 회원 수정시 성공적으로 수정되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 수정되었습니다.", "회원 수정완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static boolean memberDelete()  // 회원 삭제할때
	{
		int abc;

		abc = JOptionPane.showConfirmDialog(null, "정말 삭제하시겠습니까?", "회원 삭제", JOptionPane.YES_NO_OPTION);
		if(abc == JOptionPane.YES_OPTION) { 
			return true;
			
		} else if(abc == JOptionPane.NO_OPTION){
			return false;
		}
		return false;
	}	
	
	public static void memberDeleteOK(){
		JOptionPane.showMessageDialog(null, "삭제 완료되었습니다.", "회원 삭제 완료", JOptionPane.PLAIN_MESSAGE);
	}
	public static void memberDeleteCancel(){
		JOptionPane.showMessageDialog(null, "회원 삭제가 취소되었습니다.", "회원 삭제 취소", JOptionPane.INFORMATION_MESSAGE);
	}
	
	public static void healthRegister() // 헬스 기간등록할때 성공적으로 등록완료 메세지
	{
		JOptionPane.showMessageDialog(null, "헬스등록 완료되었습니다.", "헬스등록 완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static void memberJoin() // 회원 등록시 성공적으로 등록완료되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 등록되었습니다.", "회원등록 완료", JOptionPane.PLAIN_MESSAGE);
	}
	
/////////////////////////////////////////////////////////////////////////


	public static void trainerUpdateSuccess()  // 트레이너 수정할때 성공적으로 수정되었을때
	{
		JOptionPane.showMessageDialog(null, "성공적으로 수정되었습니다.", "트레이너 수정완료", JOptionPane.PLAIN_MESSAGE);
	}

	public static void trainerDeleteOK(){
		JOptionPane.showMessageDialog(null, "삭제 완료되었습니다.", "트레이너 삭제 완료", JOptionPane.PLAIN_MESSAGE);
	}
	public static void trainerDeleteCancel(){
		JOptionPane.showMessageDialog(null, "회원 삭제가 취소되었습니다.", "트레이너 삭제 취소", JOptionPane.INFORMATION_MESSAGE);
	}

	public static boolean trainerDelete()  // 트레이너 삭제할때
	{
		int abc;

		abc = JOptionPane.showConfirmDialog(null, "정말 삭제하시겠습니까?", "트레이너 삭제", JOptionPane.YES_NO_OPTION);
		if (abc == JOptionPane.YES_OPTION) {
			return true;
		} else if (abc == JOptionPane.NO_OPTION) {
			return false;
		}
		return false;
	}



//	public static void main(String[] args) {
//		WarningMessage wm = new WarningMessage();
//		wm.trainerDelete();
//
//	}

}

